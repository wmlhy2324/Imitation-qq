syntax = "v1"

type ChatHistoryRequest {
	UserID   uint `header:"User-ID"`
	page     int  `form:"page,optional"`
	limit    int  `form:"limit,optional"`
	FriendID uint `form:"friendId"`
}

type ChatHistoryResponse {
	ID       uint   `json:"id"`
	UserID   uint   `json:"userId"`
	Avatar   string `json:"avatar"`
	Nickname string `json:"nickname"`
	CreateAt string `json:"createAt"`
}

type ChatSessionRequest {
	UserID uint `header:"User-ID"`
	page   int  `form:"page,optional"`
	limit  int  `form:"limit,optional"`
	Key    int  `form:"key,optional"`
}

type ChatSession {
	UserID     uint   `json:"userId"`
	Avatar     string `json:"avatar"`
	Nickname   string `json:"nickname"`
	CreateAt   string `json:"createAt"` //消息时间
	MsgPreview string `json:"msgPreview"` //消息预览
	IsTop      bool   `json:"isTop"` //是否置顶
}

type ChatSessionResponse {
	List  []ChatSession `json:"list"`
	Count int64         `json:"count"`
}

type userTopRequest {
	UserID   uint `header:"User-ID"`
	FriendID uint `json:"friendId"`
}

type userTopResponse {}

type chatDeleteRequest {
	IdList []uint `json:"idList"`
	UserID uint   `header:"User-ID"`
}

type chatDeleteResponse {}

type chatRequest {
	UserID uint `header:"User-ID"`
}

type chatResponse {}

service chat {
	@handler chatHistory
	get /api/chat/history (ChatHistoryRequest) returns (ChatHistoryResponse) //聊天记录

	@handler chatSession
	get /api/chat/session (ChatSessionRequest) returns (ChatSessionResponse) //最近会话列表

	@handler userTop
	get /api/chat/usertop (userTopRequest) returns (userTopResponse)

	@handler chatDelete
	delete /api/chat/chat (chatDeleteRequest) returns (chatDeleteResponse)

	@handler chatHandler
	get /api/chat/ws/chat (chatRequest) returns (chatDeleteResponse) //
} //goctl api go -api chat_api.api -dir . --home ../../template

