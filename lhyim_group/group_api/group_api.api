syntax = "v1"

info (
	title:   "type title here"
	desc:    "type desc here"
	author:  "type author here"
	email:   "type email here"
	version: "type version here"
)

type groupCreateRequest {
	UserID     uint   `header:"User-ID"`
	Mode       int8   `json:"mode,optional"` //1直接创建 2选人创建
	Name       string `json:"name,optional"`
	IsSearch   bool   `json:"isSearch,optional"` //是否可以搜到
	Size       int    `json:"size,optional"` //群规模
	UserIDList []uint `json:"userIdList,optional"` //用户id列表
}

type groupCreateResponse {}

type groupInfoRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"`
}

type UserInfo {
	UserID   uint   `header:"User-ID"`
	Avatar   string `json:"avatar"`
	Nickname string `json:"nickname"`
}

type groupInfoResponse {
	GroupID           uint       `json:"groupId"`
	Title             string     `json:"title"`
	Abstract          string     `json:"abstract"`
	MemberCount       int        `json:"memberCount"`
	MemberOnlineCount int        `json:"memberOnlineCount"`
	Avatar            string     `json:"avatar"`
	Creator           UserInfo   `json:"creator"` //群主
	AdminList         []UserInfo `json:"adminList"` //管理员列表
	Role              int8       `json:"role"` //1群主，2群管理员，3群成员
	IsProhibition     bool       `json:"isProhibition"` //群禁言
	ProhibitionTime   *int       `json:"prohibitionTime"` //自己的禁言时间
}

type VerificationQuestion {
	Problem1 *string `json:"problem1,optional" conf:"problem1"`
	Problem2 *string `json:"problem2,optional" conf:"problem2"`
	Problem3 *string `json:"problem3,optional" conf:"problem3"`
	Answer1  *string `json:"answer1,optional" conf:"answer1"`
	Answer2  *string `json:"answer2,optional" conf:"answer2"`
	Answer3  *string `json:"answer3,optional" conf:"answer3"`
}

type groupUpdataRequest {
	UserID               uint                  `header:"User-ID"`
	ID                   uint                  `json:"id"`
	IsSearch             *bool                 `json:"isSearch,optional" conf:"is_search"`
	Verification         *int8                 `json:"verification,optional" conf:"verification"`
	IsInvite             *bool                 `json:"isInvite,optional" conf:"is_invite"`
	IsTemporarySession   *bool                 `json:"isTemporarySession,optional" conf:"is_temporary_session"` //是否开启临时会话
	IsProhibition        *bool                 `json:"isProhibition,optional" conf:"is_prohibition"`
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" conf:"verification_question"`
	Avatar               *string               `json:"avatar,optional" conf:"avatar"`
	Abstract             *string               `json:"abstrat,optional" conf:"abstract"`
	Title                *string               `json:"title,optional" conf:"title"`
}

type groupUpdateResponse {}

type groupRemoveRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"`
}

type groupRemoveResponse {}

type groupMemberRequest {
	UserID uint   `header:"User-ID"`
	ID     uint   `form:"id"`
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
	Sort   string `form:"sort,optional"`
}

type GroupMemberInfo {
	UserID         uint   `json:"userId"`
	UserNickName   string `json:"userNickName"`
	Avatar         string `json:"avatar"`
	IsOnline       bool   `json:"isOnline"`
	Role           int8   `json:"role"`
	MemberNickname string `json:"memberNickname"`
	CreateAt       string `json:"createAt"`
	NewMsgDate     string `json:"newMsgDate"`
}

type groupMemberResponse {
	List  []GroupMemberInfo `json:"list"`
	Count int               `json:"count"`
}

type groupMemberRemoveRequest {
	UserID   uint `header:"User-ID"`
	ID       uint `form:"id"` //群id
	MemberID uint `form:"memberId"`
}

type groupMemberRemoveResponse {}

type groupMemberAddRequest {
	UserID       uint   `header:"User-ID"`
	ID           uint   `json:"id"` //群id
	MemberIDList []uint `json:"memberIdlist"`
}

type groupMemberAddResponse {}

type groupMemberNicknameUpdateRequest {
	UserID   uint   `header:"User-ID"`
	ID       uint   `json:"id"` //群id
	MemberID uint   `json:"memberId"`
	Nickname string `json:"nickname"`
}

type groupMemberNicknameUpdateResponse {}

type groupMemberRoleUpdateRequest {
	UserID   uint `header:"User-ID"`
	ID       uint `json:"id"` //群id
	MemberID uint `json:"memberId"`
	Role     int8 `json:"role"`
}

type groupMemberRoleUpdateResponse {}

type groupfriendsListRequest {
	UserID uint `header:"User-ID"`
	ID     uint `form:"id"` //群id
}

type GroupfriendsList {
	UserId    uint   `json:"userId"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	IsInGroup bool   `json:"isInGroup"` //是否在群里面
}

type groupfriendsListResponse {
	List  []GroupfriendsList `json:"list"`
	Count int                `json:"count"`
}

type groupSearchRequest {
	UserID uint   `header:"User-ID"`
	Key    string `form:"key"` //群id和昵称
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
}

type GroupSearch {
	GroupID         uint   `json:"groupId"`
	Title           string `json:"title"`
	Abstract        string `json:"abstract"`
	Avatar          string `json:"avatar"`
	IsInGroup       bool   `json:"isInGroup"` //我是否在群里
	UserCount       int    `json:"userCount"` //总数
	UserOnlineCount int    `json:"userOnlineCount"`
}

type groupSearchListResponse {
	List  []GroupSearch `json:"list"`
	Count int           `json:"count"`
}

type GroupValidRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `path:"id"`
}

type GroupValidResponse {
	Verification         int8                 `json:"verification"` //好友验证
	VerificationQuestion VerificationQuestion `json:"verificationQuestion"` //问题和答案
}

type AddGroupRequest {
	UserID               uint                  `header:"User-ID"`
	GroupID              uint                  `json:"groupId"`
	Verify               string                `json:"verify,optional"` //验证消息
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion"` //问题和答案
}

type AddGroupResponse {}

type groupValidListRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupValidiInfo {
	ID                   uint                  `json:"id"` //验证id
	GroupID              uint                  `json:"groupId"`
	UserID               uint                  `json:"userId"`
	UserNickname         string                `json:"userNickname"`
	UserAvatar           string                `json:"userAvatar"`
	Status               int8                  `json:"status"` //状态
	AddtionalMessage     string                `json:"addtionalMessage"`
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion"`
	Title                string                `json:"title"` //群名
	CreateAt             string                `json:"createAt"`
	Type                 int8                  `json:"type"` //1 加 2退
}

type groupValidListResponse {
	List  []GroupValidiInfo `json:"list"`
	Count int               `json:"count"`
}

type groupValidStatusRequest {
	UserID  uint `header:"User-ID"`
	ValidID uint `json:"validId"` //验证id
	Status  int8 `json:"status"` //状态id
}

type groupValidStatusResponse {}

type groupProhibitionRequest {
	UserID          uint `header:"User-ID"`
	MemberID        uint `json:"memberId"`
	ProhibitionTime *int `json:"prohibitionTime,optional"` //分钟
	GroupID         uint `json:"groupId"`
}

type groupProhibitionResponse {}

type groupHistoryRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type groupHistoryResponse {}

type groupSessionRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type groupSessionResponse {
	List  []GroupSessionList `json:"list"`
	Count int                `json:"count"`
}

type GroupSessionList {
	GroupID       uint   `json:"groupId"`
	Title         string `json:"title"`
	Avatar        string `json:"avatar"`
	NewMsgDate    string `json:"newMsgDate"` //最新消息
	NewMsgPreview string `json:"newMsgPreview"` //最新的消息内容
}

service group {
	@handler groupCreate
	post /api/group/group (groupCreateRequest) returns (groupCreateResponse)

	@handler groupInfo
	get /api/group/group/:id (groupInfoRequest) returns (groupInfoResponse)

	@handler groupUpdate
	put /api/group/group (groupUpdataRequest) returns (groupUpdateResponse)

	@handler groupRemove
	delete /api/group/group/:id (groupRemoveRequest) returns (groupRemoveResponse) //群解散

	@handler groupMember
	get /api/group/member (groupMemberRequest) returns (groupMemberResponse)

	@handler groupMemberRemove
	delete /api/group/member (groupMemberRemoveRequest) returns (groupMemberRemoveResponse) //把用户提出群聊

	@handler groupMemberAdd
	post /api/group/member (groupMemberAddRequest) returns (groupMemberAddResponse) //邀请用户进入群聊

	@handler groupMemberNicknameUpdate
	put /api/group/member/nickname (groupMemberNicknameUpdateRequest) returns (groupMemberNicknameUpdateResponse)

	@handler groupMemberRoleUpdate
	put /api/group/member/role (groupMemberRoleUpdateRequest) returns (groupMemberRoleUpdateResponse) //修改角色

	@handler groupfriendsList
	get /api/group/friends (groupfriendsListRequest) returns (groupfriendsListResponse)

	@handler groupSearch
	get /api/group/search (groupSearchRequest) returns (groupSearchListResponse) //群搜索

	@handler groupValid
	get /api/group/valid/:id (GroupValidRequest) returns (GroupValidResponse) //群验证

	@handler groupValidAdd
	post /api/group/valid (AddGroupRequest) returns (AddGroupResponse) //加群

	@handler groupValidList
	get /api/group/valid (groupValidListRequest) returns (groupValidListResponse)

	@handler groupValidStatus
	put /api/group/valid/status (groupValidStatusRequest) returns (groupValidStatusResponse)

	@handler groupProhibition
	put /api/group/member/prohibition (groupProhibitionRequest) returns (groupProhibitionResponse)

	@handler groupHistory //聊天记录
	get /api/group/history/:id (groupHistoryRequest) returns (groupHistoryResponse)

	@handler groupSession
	get /api/group/session (groupSessionRequest) returns (groupSessionResponse) //群会话列表
//我的好友哪些在这个群里面
} //goctl api go -api group_api.api -dir . --home ../../template

